<?php

namespace Proxy\__CG__\Newscoop\Image;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LocalImage extends \Newscoop\Image\LocalImage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'location', 'basename', 'thumbnailPath', 'user', 'created', 'updated', 'url', 'description', 'width', 'height', 'photographer', 'photographerUrl', 'place', 'date', 'contentType', 'renditions', 'items', 'isUpdatedStorage', 'source', 'status', 'captions', 'articleImageId');
        }

        return array('__isInitialized__', 'id', 'location', 'basename', 'thumbnailPath', 'user', 'created', 'updated', 'url', 'description', 'width', 'height', 'photographer', 'photographerUrl', 'place', 'date', 'contentType', 'renditions', 'items', 'isUpdatedStorage', 'source', 'status', 'captions', 'articleImageId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (LocalImage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', array());

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidth', array());

        return parent::getWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function getHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeight', array());

        return parent::getHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function isLocal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLocal', array());

        return parent::isLocal();
    }

    /**
     * {@inheritDoc}
     */
    public function hasWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasWidth', array());

        return parent::hasWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhotographer($photographer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhotographer', array($photographer));

        return parent::setPhotographer($photographer);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotographer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotographer', array());

        return parent::getPhotographer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhotographerUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhotographerUrl', array($url));

        return parent::setPhotographerUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotographerUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotographerUrl', array());

        return parent::getPhotographerUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getCaption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaption', array());

        return parent::getCaption();
    }

    /**
     * {@inheritDoc}
     */
    public function getCaptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaptions', array());

        return parent::getCaptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlace($place)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlace', array($place));

        return parent::setPlace($place);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlace', array());

        return parent::getPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function hasUpdatedStorage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasUpdatedStorage', array());

        return parent::hasUpdatedStorage();
    }

    /**
     * {@inheritDoc}
     */
    public function updateStorage($path, $thumbnailPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateStorage', array($path, $thumbnailPath));

        return parent::updateStorage($path, $thumbnailPath);
    }

    /**
     * {@inheritDoc}
     */
    public function upload($path, $thumbnailPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', array($path, $thumbnailPath));

        return parent::upload($path, $thumbnailPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getThumbnailPath($clear = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThumbnailPath', array($clear));

        return parent::getThumbnailPath($clear);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', array());

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function getContentType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContentType', array());

        return parent::getContentType();
    }

    /**
     * {@inheritDoc}
     */
    public function setContentType($contentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContentType', array($contentType));

        return parent::setContentType($contentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Newscoop\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(\DateTime $created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', array());

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated(\DateTime $updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', array($updated));

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function setWidth($width)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidth', array($width));

        return parent::setWidth($width);
    }

    /**
     * {@inheritDoc}
     */
    public function setHeight($height)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeight', array($height));

        return parent::setHeight($height);
    }

    /**
     * {@inheritDoc}
     */
    public function setThumbnailPath($thumbnailPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThumbnailPath', array($thumbnailPath));

        return parent::setThumbnailPath($thumbnailPath);
    }

    /**
     * {@inheritDoc}
     */
    public function setBasename($basename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBasename', array($basename));

        return parent::setBasename($basename);
    }

    /**
     * {@inheritDoc}
     */
    public function setSource($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', array($source));

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getBasename()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBasename', array());

        return parent::getBasename();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', array($url));

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticleImageId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticleImageId', array());

        return parent::getArticleImageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setArticleImageId($articleImageId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArticleImageId', array($articleImageId));

        return parent::setArticleImageId($articleImageId);
    }

}
