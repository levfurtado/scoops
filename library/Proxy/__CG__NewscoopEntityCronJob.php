<?php

namespace Proxy\__CG__\Newscoop\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CronJob extends \Newscoop\Entity\CronJob implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'command', 'schedule', 'debug', 'dateFormat', 'output', 'runOnHost', 'environment', 'runAs', 'enabled', 'sendMail', 'detailsUrl', 'createdAt');
        }

        return array('__isInitialized__', 'id', 'name', 'command', 'schedule', 'debug', 'dateFormat', 'output', 'runOnHost', 'environment', 'runAs', 'enabled', 'sendMail', 'detailsUrl', 'createdAt');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CronJob $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommand', array());

        return parent::getCommand();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommand($command)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommand', array($command));

        return parent::setCommand($command);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchedule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchedule', array());

        return parent::getSchedule();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchedule($schedule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchedule', array($schedule));

        return parent::setSchedule($schedule);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFormat', array());

        return parent::getDateFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFormat($dateFormat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFormat', array($dateFormat));

        return parent::setDateFormat($dateFormat);
    }

    /**
     * {@inheritDoc}
     */
    public function getOutput()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOutput', array());

        return parent::getOutput();
    }

    /**
     * {@inheritDoc}
     */
    public function setOutput($output)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOutput', array($output));

        return parent::setOutput($output);
    }

    /**
     * {@inheritDoc}
     */
    public function getRunOnHost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunOnHost', array());

        return parent::getRunOnHost();
    }

    /**
     * {@inheritDoc}
     */
    public function setRunOnHost($runOnHost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRunOnHost', array($runOnHost));

        return parent::setRunOnHost($runOnHost);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnvironment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnvironment', array());

        return parent::getEnvironment();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnvironment($environment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnvironment', array($environment));

        return parent::setEnvironment($environment);
    }

    /**
     * {@inheritDoc}
     */
    public function getRunAs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRunAs', array());

        return parent::getRunAs();
    }

    /**
     * {@inheritDoc}
     */
    public function setRunAs($runAs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRunAs', array($runAs));

        return parent::setRunAs($runAs);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', array());

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', array($enabled));

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getDebug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDebug', array());

        return parent::getDebug();
    }

    /**
     * {@inheritDoc}
     */
    public function setDebug($debug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDebug', array($debug));

        return parent::setDebug($debug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendMail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendMail', array());

        return parent::getSendMail();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendMail($sendMail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendMail', array($sendMail));

        return parent::setSendMail($sendMail);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetailsUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetailsUrl', array());

        return parent::getDetailsUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetailsUrl($detailsUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetailsUrl', array($detailsUrl));

        return parent::setDetailsUrl($detailsUrl);
    }

}
