<?php

namespace Proxy\__CG__\Newscoop\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Publication extends \Newscoop\Entity\Publication implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'language', 'issues', 'public_enabled', 'moderator_to', 'moderator_from', 'defaultAliasId', 'defaultAlias', 'urlTypeId', 'forumId', 'commentsEnabled', 'commentsArticleDefaultEnabled', 'commentsSubscribersModerated', 'commentsPublicModerated', 'commentsCaptchaEnabled', 'commentsSpamBlockingEnabled', 'urlErrorTemplateId', 'seo', 'metaTitle', 'metaKeywords', 'metaDescription');
        }

        return array('__isInitialized__', 'id', 'name', 'language', 'issues', 'public_enabled', 'moderator_to', 'moderator_from', 'defaultAliasId', 'defaultAlias', 'urlTypeId', 'forumId', 'commentsEnabled', 'commentsArticleDefaultEnabled', 'commentsSubscribersModerated', 'commentsPublicModerated', 'commentsCaptchaEnabled', 'commentsSpamBlockingEnabled', 'urlErrorTemplateId', 'seo', 'metaTitle', 'metaKeywords', 'metaDescription');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Publication $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', array());

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', array($language));

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function addIssue(\Newscoop\Entity\Issue $issue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIssue', array($issue));

        return parent::addIssue($issue);
    }

    /**
     * {@inheritDoc}
     */
    public function getIssues()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIssues', array());

        return parent::getIssues();
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguages', array());

        return parent::getLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLanguage(\Newscoop\Entity\Language $language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLanguage', array($language));

        return parent::setDefaultLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLanguage', array());

        return parent::getDefaultLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLanguageName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLanguageName', array());

        return parent::getDefaultLanguageName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSections()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSections', array());

        return parent::getSections();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setModeratorTo($p_moderator_to)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModeratorTo', array($p_moderator_to));

        return parent::setModeratorTo($p_moderator_to);
    }

    /**
     * {@inheritDoc}
     */
    public function getModeratorTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModeratorTo', array());

        return parent::getModeratorTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setModeratorFrom($p_moderator_from)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModeratorFrom', array($p_moderator_from));

        return parent::setModeratorFrom($p_moderator_from);
    }

    /**
     * {@inheritDoc}
     */
    public function getModeratorFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModeratorFrom', array());

        return parent::getModeratorFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultAlias', array());

        return parent::getDefaultAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultAlias($alias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultAlias', array($alias));

        return parent::setDefaultAlias($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function getCaptchaEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCaptchaEnabled', array());

        return parent::getCaptchaEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentsSubscribersModerated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentsSubscribersModerated', array());

        return parent::getCommentsSubscribersModerated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentsSubscribersModerated($commentsSubscribersModerated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentsSubscribersModerated', array($commentsSubscribersModerated));

        return parent::setCommentsSubscribersModerated($commentsSubscribersModerated);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentsPublicModerated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentsPublicModerated', array());

        return parent::getCommentsPublicModerated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentsPublicModerated($commentsPublicModerated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentsPublicModerated', array($commentsPublicModerated));

        return parent::setCommentsPublicModerated($commentsPublicModerated);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicCommentsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicCommentsEnabled', array());

        return parent::getPublicCommentsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicCommentsEnabled($public_enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicCommentsEnabled', array($public_enabled));

        return parent::setPublicCommentsEnabled($public_enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultAliasId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultAliasId', array());

        return parent::getDefaultAliasId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultAliasId($defaultAliasId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultAliasId', array($defaultAliasId));

        return parent::setDefaultAliasId($defaultAliasId);
    }

    /**
     * {@inheritDoc}
     */
    public function setSeo(array $seo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeo', array($seo));

        return parent::setSeo($seo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeo', array());

        return parent::getSeo();
    }

    /**
     * {@inheritDoc}
     */
    public function getSeoChoices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeoChoices', array());

        return parent::getSeoChoices();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeoChoices($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeoChoices', array($data));

        return parent::setSeoChoices($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrlTypeId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrlTypeId', array());

        return parent::getUrlTypeId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrlTypeId($urlTypeId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrlTypeId', array($urlTypeId));

        return parent::setUrlTypeId($urlTypeId);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitle', array());

        return parent::getMetaTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaTitle($metaTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaTitle', array($metaTitle));

        return parent::setMetaTitle($metaTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeywords', array());

        return parent::getMetaKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaKeywords($metaKeywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaKeywords', array($metaKeywords));

        return parent::setMetaKeywords($metaKeywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', array());

        return parent::getMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescription($metaDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescription', array($metaDescription));

        return parent::setMetaDescription($metaDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentsArticleDefaultEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentsArticleDefaultEnabled', array());

        return parent::getCommentsArticleDefaultEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentsArticleDefaultEnabled($commentsArticleDefaultEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentsArticleDefaultEnabled', array($commentsArticleDefaultEnabled));

        return parent::setCommentsArticleDefaultEnabled($commentsArticleDefaultEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentsCaptchaEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentsCaptchaEnabled', array());

        return parent::getCommentsCaptchaEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentsCaptchaEnabled($commentsCaptchaEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentsCaptchaEnabled', array($commentsCaptchaEnabled));

        return parent::setCommentsCaptchaEnabled($commentsCaptchaEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentsSpamBlockingEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentsSpamBlockingEnabled', array());

        return parent::getCommentsSpamBlockingEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentsSpamBlockingEnabled($commentsSpamBlockingEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentsSpamBlockingEnabled', array($commentsSpamBlockingEnabled));

        return parent::setCommentsSpamBlockingEnabled($commentsSpamBlockingEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentsEnabled', array());

        return parent::getCommentsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentsEnabled($commentsEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentsEnabled', array($commentsEnabled));

        return parent::setCommentsEnabled($commentsEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicEnabled', array());

        return parent::getPublicEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicEnabled($public_enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicEnabled', array($public_enabled));

        return parent::setPublicEnabled($public_enabled);
    }

}
